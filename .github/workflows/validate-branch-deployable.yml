# Validates a feature branch is deployable prior to merging into master
# Carries out the following in parallel:
# 1. Run all Jest tests
# 2. Create a scratch org WITHOUT package namespace, deploy and run all apex tests
# 3. Create scratch orgs WITH package namespace, deploy and run all apex tests

name: Validate Branch is Deployable

# Run only on demand or on PRs to master
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

env:
  JWT_SIGNING_KEY:  ${{ secrets.JWT_SIGNING_KEY }}
  CONSUMER_KEY:     ${{ secrets.ISV_DEV_HUB_CONSUMER_KEY }}
  DEV_HUB_USERNAME: ${{ secrets.ISV_DEV_HUB_USERNAME }}

jobs:
  run-jest-tests:
    name: Run Jest Tests
    runs-on: ubuntu-latest
    steps:

    # Checkout branch so we have source code in working directory
    - name: 'Checkout source code'
      uses: actions/checkout@v2
    
    # Install currently supported node version
    - name: Install node 14
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'

    # Call an action (from scripts subdirectory) to install DX and authenticate to the dev hub
    - name: Install DX
      uses: ./.github/workflows/scripts/install-and-authenticate-dx
      with:
        jwt-signing-key:  $JWT_SIGNING_KEY
        consumer-key:     $CONSUMER_KEY
        dev-hub-username: $DEV_HUB_USERNAME

    - name: Install Jest
      run: |
        sfdx force:lightning:lwc:test:setup

    - name: Run all Jest tests
      run: |
        sfdx force:lightning:lwc:test:run


  deploy-and-test-without-namespace:
    name: Deploy and Test No Namespace
    runs-on: ubuntu-latest
    steps:

    # Checkout branch so we have source code in working directory
    - name: 'Checkout source code'
      uses: actions/checkout@v2
    
    # Install currently supported node version
    - name: Install node 14
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'

    # Call an action (from scripts subdirectory) to install DX and authenticate to the dev hub
    - name: Install DX
      uses: ./.github/workflows/scripts/install-and-authenticate-dx
      with:
        jwt-signing-key:  $JWT_SIGNING_KEY
        consumer-key:     $CONSUMER_KEY
        dev-hub-username: $DEV_HUB_USERNAME

    - name: Create scratch org
      run: |
        sfdx force:org:create -f config/project-scratch-def.json --setdefaultusername -d 1

    - name: Push source
      run: |
        sfdx force:source:push

    - name: Assign permission sets
      run: |
        sfdx force:user:permset:assign --permsetname FormulaShare_Admin_User
        sfdx force:user:permset:assign --permsetname FormulaShare_Sample_App_Permissions

    - name: Run all apex tests
      run: |
        sfdx force:apex:test:run --synchronous

    - name: Delete scratch org
      run: |
        sfdx force:org:delete -p

    # Output information related to processing
    - name: Output sfdx logs
      if: ${{ always() }}
      run: |
        tail -n100 ~/.sfdx/sfdx.log


  deploy-and-test-with-namespace:
    name: Deploy and Test with Namespace
    runs-on: ubuntu-latest
    steps:

    # Checkout branch so we have source code in working directory
    - name: 'Checkout source code'
      uses: actions/checkout@v2
    
    # Install currently supported node version
    - uses: actions/setup-node@v2
      with:
        node-version: '14.x'

    # Call an action (from scripts subdirectory) to install DX and authenticate to the dev hub
    - name: Install DX
      uses: ./.github/workflows/scripts/install-and-authenticate-dx
      with:
        jwt-signing-key:  $JWT_SIGNING_KEY
        consumer-key:     $CONSUMER_KEY
        dev-hub-username: $DEV_HUB_USERNAME

    # JQ is used to update project-scratch-def.json
    - name: Install jq
      run: |
        sudo apt-get install jq
    
    # xml2js used in node script to append namespace to custom metadata
    - name: Install xml2js
      run: |
        npm install xml2js
    
    # jq adds the namespace element to the project-scratch-def.json
    # We're able to create scratch orgs in package namespace from ISV org because namespace is linked
    - name: Add package namespace to project-scratch-def.json
      run: |
        jq '. + {"namespace": "sdfs"}' config/project-scratch-def.json > temp.json
        mv temp.json config/project-scratch-def.json

    - name: Append namespace to metadata
      run: 
        node scripts\appendNamespaceToSampleMD.js

    - name: Create scratch org
      run: |
        sfdx force:org:create -f config/project-scratch-def.json --setdefaultusername -d 1

    - name: Push source
      run: |
        sfdx force:source:push

    - name: Assign permission sets
      run: |
        sfdx force:user:permset:assign --permsetname FormulaShare_Admin_User
        sfdx force:user:permset:assign --permsetname FormulaShare_Sample_App_Permissions

    - name: Run all apex tests
      run: |
        sfdx force:apex:test:run --synchronous

    - name: Delete scratch org
      run: |
        sfdx force:org:delete -p

    # Output information related to processing
    - name: Output sfdx logs
      if: ${{ always() }}
      run: |
        tail -n100 ~/.sfdx/sfdx.log